{"version":3,"sources":["component/Section/Section.module.css","component/Statistics/Statistics.module.css","component/Notification/Notification.module.css","component/FeedbackOptions/FeedbackOptions.module.css","component/Section/Section.jsx","component/Statistics/Statistics.jsx","component/Notification/Notification.jsx","component/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","tn","Statistics","good","neutral","bad","total","positivePercentage","bbb","Notification","message","notif","FeedbackOptions","buttons","onLeaveFeedback","Object","keys","map","button","type","btn","onClick","App","useState","setGood","setNeutral","setBad","countTotalFeedback","values","reduce","value","countPositiveFeedbackPercentage","Math","round","totalFeedback","name","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,GAAK,sB,gBCAvBD,EAAOC,QAAU,CAAC,IAAM,0B,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,8B,gBCA1BD,EAAOC,QAAU,CAAC,IAAM,+B,+JCoBTC,EAjBC,SAAC,GAGV,IAAD,IAFJC,aAEI,MAFI,GAEJ,EADJC,EACI,EADJA,SAEA,OACE,qCACE,oBAAIC,UAAWC,IAAEC,GAAjB,SAAsBJ,IACrBC,M,gBCuBQI,EA9BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IAGI,IAFJC,aAEI,MAFI,EAEJ,MADJC,0BACI,MADiB,EACjB,EACJ,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAX,OACA,oBAAGP,UAAWC,IAAEQ,IAAhB,+BAEGD,EAFH,Y,gBCGSE,EAhBK,SAAC,GAEd,IADLC,EACI,EADJA,QAEA,OACE,8BACE,mBAAGX,UAAWC,IAAEW,MAAhB,SACGD,O,gBC4BME,EAjCO,SAAC,GAGhB,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEA,OACE,8BACGC,OAAOC,KAAKH,GAASI,KACpB,SAAAC,GAAM,OACJ,wBAEEC,KAAK,SACLpB,UAAWC,IAAEoB,IACbC,QAAS,WACPP,EAAgBI,IALpB,SAQGA,GAPIA,SC2FFI,MAjGf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EACED,mBAAS,GADX,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAEMb,EAAU,CACdV,OACAC,UACAC,OAgCIsB,EAAqB,WAGzB,OADEZ,OAAOa,OAAOf,GACOgB,QACrB,SAACvB,EAAOwB,GAAR,OAAkBxB,EAAQwB,IAC1B,IAIEC,EACJ,WACE,IAAMzB,EACJqB,IAEF,OAAOrB,EAAQ,EACX0B,KAAKC,MACF9B,EAAOG,EAAS,KAEnB,GAGF4B,EACJP,IAEF,OACE,qCACE,cAAC,EAAD,CAAS9B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEgB,QAASA,EACTC,gBApDgB,SAAAqB,GACtB,OAAQA,GACN,IAAK,OACHX,GACE,SAAAY,GAAS,OAAIA,EAAY,KAE3B,MACF,IAAK,UACHX,GACE,SAAAW,GAAS,OAAIA,EAAY,KAE3B,MACF,IAAK,MACHV,GACE,SAAAU,GAAS,OAAIA,EAAY,KAE3B,MAEF,QACE,aAuCDF,EAAgB,EACf,cAAC,EAAD,CAASrC,MAAM,aAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,mBACEwB,IACIA,IACA,MAKV,cAAC,EAAD,CAAcrB,QAAQ,0BC9F9B2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7cc1fd60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tn\":\"Section_tn__2biXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bbb\":\"Statistics_bbb__3K0vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notif\":\"Notification_notif__1eWg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2Iebz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({\n  title = '',\n  children,\n}) => {\n  return (\n    <>\n      <h1 className={s.tn}>{title}</h1>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total = 0,\n  positivePercentage = 0,\n}) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total} </p>\n      <p className={s.bbb}>\n        Positive feedback:\n        {positivePercentage} %\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage:\n    PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","//import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification =({\n  message,\n}) => {\n  return (\n    <div>\n      <p className={s.notif}>\n        {message}\n      </p>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\n\nconst FeedbackOptions=({\n  buttons,\n  onLeaveFeedback,\n}) => {\n  return (\n    <div>\n      {Object.keys(buttons).map(\n        button => (\n          <button\n            key={button}\n            type=\"button\"\n            className={s.btn}\n            onClick={() => {\n              onLeaveFeedback(button);\n            }}\n          >\n            {button}\n          </button>\n        ),\n      )}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n buttons: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import './App.css';\n//import React from 'react';\nimport { useState } from 'react';\nimport Section from './component/Section/Section';\nimport Statistics from './component/Statistics/Statistics';\nimport Notification from './component/Notification/Notification';\nimport FeedbackOptions from './component/FeedbackOptions/FeedbackOptions';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] =\n    useState(0);\n  const [bad, setBad] = useState(0);\n\n  const buttons = {\n    good,\n    neutral,\n    bad,\n  };\n\n  /*handleIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };*/\n\n  const handleIncrement = name => {\n    switch (name) {\n      case 'good':\n        setGood(\n          prevState => prevState + 1,\n        );\n        break;\n      case 'neutral':\n        setNeutral(\n          prevState => prevState + 1,\n        );\n        break;\n      case 'bad':\n        setBad(\n          prevState => prevState + 1,\n        );\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const feedbacksValues =\n      Object.values(buttons);\n    return feedbacksValues.reduce(\n      (total, value) => total + value,\n      0,\n    );\n  };\n\n  const countPositiveFeedbackPercentage =\n    () => {\n      const total =\n        countTotalFeedback();\n\n      return total > 0\n        ? Math.round(\n            (good / total) * 100,\n          )\n        : 0;\n    };\n\n  const totalFeedback =\n    countTotalFeedback();\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          buttons={buttons}\n          onLeaveFeedback={\n            handleIncrement\n          }\n        />\n      </Section>\n\n      {totalFeedback > 0 ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={\n              countPositiveFeedbackPercentage()\n                ? countPositiveFeedbackPercentage()\n                : 0\n            }\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}